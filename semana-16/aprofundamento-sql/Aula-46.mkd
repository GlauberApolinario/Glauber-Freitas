### Exercício - 1
a)
O comando altera a tabela Actor deletando a coluna salary

b)
O comando altera a tabela Actor mudando o nome da coluna gender para sex com o tipo varchar(6)

c)
O comando altera a tabela Actor mantendo o nome da coluna gender mas alterando seu tipo para varchar(255)

d)
```sql
ALTER TABLE Actor CHANGE gender gender VARCHAR(100);
```
### Exercício - 2
a)
```sql
UPDATE Actor
SET 
	name = "",
    birth_date = ""
WHERE id = "003";
```

b)
```sql
UPDATE Actor
SET 
	name = "JULIANA PAES"
WHERE name = "Juliana Paes";

UPDATE Actor
SET 
	name = "Juliana Paes"
WHERE name = "JULIANA PAES";
```

c)
```sql
UPDATE Actor 
SET
	id = "",
	name = "",
	salary = 0,
    birth_date = "",
    gender = ""
WHERE id = 005;
```

d)
0 row(s) affected Rows matched: 0  Changed: 0  Warnings: 0
A resposta mostra que 0 linhas foram afetadas nesse comando, ou seja, ao tentar realizar uma atualização de um dado que não exista na tabela não irá gerar nenhum erro, apenas não afetará nenhuma linha 
### Exercício - 3
a)
```sql
DELETE FROM Actor WHERE name = "Fernanda Montenegro";
```

b)
```sql
DELETE FROM Actor WHERE gender = "male" AND salary > 1000000;
```
### Exercício - 4
a)
```sql
SELECT MAX(salary) FROM Actor;
```

b)
```sql
SELECT MIN(salary) FROM Actor WHERE gender = "female";
```

c)
```sql
SELECT COUNT(*) FROM Actor WHERE gender = "female";
```

d)
```sql
SELECT SUM(salary) FROM Actor;
```
### Exercício - 5
a)
A query retorna uma contagem dos atores divididos pelo genero 

b)
```sql
SELECT id, name FROM Actor WHERE gender = "male" ORDER BY name DESC;
```

c)
```sql
SELECT * FROM Actor WHERE gender = "male" ORDER BY salary ASC;
```

d)
```sql
SELECT * FROM Actor ORDER BY salary DESC LIMIT 3;
```

e)
```sql
SELECT AVG(salary), gender FROM Actor GROUP BY gender; 
```
### Exercício - 6
a)
```sql
ALTER TABLE Movies ADD COLUMN playing_limit_date DATE;
```

b)
```sql
ALTER TABLE Movies CHANGE COLUMN rating rating FLOAT;
```

c)
```sql
UPDATE Movies SET playing_limit_date = "2021-11-30" WHERE id = "001";
UPDATE Movies SET playing_limit_date = "2020-11-30" WHERE id = "002";
```

d)
```sql
DELETE FROM Movies WHERE id = "004";
UPDATE Movies SET synopsis = "" WHERE id = "004";
```
0 row(s) affected Rows matched: 0  Changed: 0  Warnings: 0
O resultado mostra que 0 linhas foram afetadas com o comando, o comando foi correto mas como não foi encontrado nenhum resultado com o parâmetro passado nenhuma linha foi alterada.
### Exercício - 7
a)
```sql
SELECT COUNT(*) FROM Movies WHERE rating > 7.5;
```

b)
```sql
SELECT AVG(rating) FROM Movies;
```

c)
```sql
SELECT COUNT(*) FROM Movies WHERE playing_limit_date > CURDATE();
```

d)
```sql
SELECT COUNT(*) FROM Movies WHERE release_date > CURDATE();
```

e)
```sql
SELECT MAX(rating) FROM Movies;
```

f)
```sql
SELECT MIN(rating) FROM Movies;
```
### Exercício - 8